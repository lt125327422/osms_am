package com.itecheasy.core.amazon;

import java.util.Date;
import java.util.List;

import javax.jws.WebParam;
import javax.jws.WebService;


import com.amazonaws.mws.MarketplaceWebServiceException;
import com.amazonservices.mws.orders._2013_09_01.model.ListOrderItemsResult;
import com.itecheasy.core.amazon.getReportResult.AmazonStockReportVO;
import com.itecheasy.core.amazon.getReportvo.RequestReportVO;
import com.itecheasy.core.amazon.vo.*;

/** 
 * @author wanghw
 * @date 2015-4-2 
 * @description TODO
 * @version
 */
@WebService
public interface AmazonWebService {
	
	public String getResultBySessionId(@WebParam(name="sessionId")String sessionId,
			@WebParam(name="api")AmazonConfigInfo api);
	
	public String submitFeed(@WebParam(name="file")byte[] file,@WebParam(name="ext")String ext,
			@WebParam(name="api")AmazonConfigInfo api);
	
	public List<OrderAmazon> getOrder(@WebParam(name="amazonOrderIds")List<String> amazonOrderIds,
			@WebParam(name="api")AmazonConfigInfo api);
	
	public ListOrderItemsResult getOrderItems(@WebParam(name="amazonOrderId")String amazonOrderId,
			@WebParam(name="api")AmazonConfigInfo api);
	
	public ListOrdersResultAmazon getOrders(
			@WebParam(name="createdAfter")Date createdAfter, 
			@WebParam(name="createdBefore")Date createdBefore,
			@WebParam(name="lastUpdatedAfter")Date lastUpdatedAfter, 
			@WebParam(name="lastUpdatedBefore")Date lastUpdatedBefore, 
			@WebParam(name="orderStatus")List<String> orderStatus,
			@WebParam(name="sellerOrderId")String sellerOrderId, 
			@WebParam(name="buyerEmail")String buyerEmail,
			@WebParam(name="api")AmazonConfigInfo api);
	
	/**
	 * 上传物流跟踪号
	 * @param template
	 * @return
	 */
	public String uploadTraceCode(@WebParam(name="templates")List<AmazonUploadTraceTemplate> templates,
			@WebParam(name="api")AmazonConfigInfo api);
	

	/**
	 * 取消amazon订单
	 * @param cancels
	 * @param orderId
	 * @param cancelReason
	 * @param itemCode
	 * @return
	 */
	public String cancelOrder(@WebParam(name="cancels")List<CancelOrderBO> cancels,
			@WebParam(name="api")AmazonConfigInfo api);
	
	/**
	 * 获取fba库存信息
	 * @param skus 最大50，
	 * @param startDate 
	 * @param isDetail 是否返回详细信息
	 */
	public listInventorysResult listInventorys(@WebParam(name="skus")List<String> skus,
			@WebParam(name="startDate")Date startDate,
			@WebParam(name="isDetail")boolean isDetail,@WebParam(name="api")AmazonConfigInfo api);
	
	public listInventorysResult listInventorysByNextToken(@WebParam(name="nextToken")String nextToken,
			@WebParam(name="api")AmazonConfigInfo api);


	
	/**
	 * 创建fba补货计划
	 * @param api
	 * @param itemList
	 * @param shipFromAddress
	 * @param shipToCountryCode
	 * @return
	 */
	public List<InboundShipmentVO> createInboundShipmentPlan(@WebParam(name = "api") AmazonConfigInfo api, @WebParam(name = "itemList")List<InboundItemVO> itemList,
			@WebParam(name = "shipFromAddress")AddressVO shipFromAddress,@WebParam(name = "shipToCountryCode") String shipToCountryCode);

	/**
	 * 提交fba补货订单
	 * @param api
	 * @param inboundShipmentVO
	 * @return
	 */
	public String createInboundShipment(@WebParam(name = "api") AmazonConfigInfo api,
                                        @WebParam(name="inboundShipmentVO") InboundShipmentVO inboundShipmentVO);

	/**
	 * 	update fba补货订单	提交亚马逊批量
	 * @param api
	 * @param inboundShipmentVO
	 * @return
	 */
	public String updateInboundShipment(@WebParam(name = "api") AmazonConfigInfo api,
                                        @WebParam(name="inboundShipmentVO") InboundShipmentVO inboundShipmentVO);




	/**
	 *
	 * 向亚马逊发送入库货件的运输信息
	 *
	 * @param api
	 * @param transportContentVO
	 * @return
	 */
	public String putTransportContent(@WebParam(name = "api") AmazonConfigInfo api,
									  @WebParam(name="transportContentVO") TransportContentVO transportContentVO);


	/**
	 * 根据指定的条件返回入库货件列表
	 * 这个版本主要是返回订单的状态
	 * @param api
	 * @param amazonShipmentStatusListVO
	 * @return
	 */
	 ListInboundShipmentsResultVO listInboundShipments(@WebParam(name = "api")AmazonConfigInfo api,
													   @WebParam(name = "amazonShipmentStatusListVO")AmazonShipmentStatusListVO amazonShipmentStatusListVO);

	/**
	 *根据指定的条件返回入库货件列表,返回listInboundShipments剩下的信息
	 *这个版本主要是返回订单的状态
	 *
	 * @param api
	 * @param amazonShipmentStatusListVO
	 * @return
	 */
	 ListInboundShipmentsResultVO listInboundShipmentsByNextToken(@WebParam(name = "api")AmazonConfigInfo api,
																  @WebParam(name = "amazonShipmentStatusListVO")AmazonShipmentStatusListVO amazonShipmentStatusListVO);



	/**
	 *
	 * 用于自动任务 get amazon stock report
	 * @return
	 */
	List<AmazonStockReportVO>  getReport(@WebParam(name = "requestReportVO")RequestReportVO requestReportVO,
										 @WebParam(name = "api")AmazonConfigInfo api) throws MarketplaceWebServiceException;


}
